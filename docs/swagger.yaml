basePath: /content
definitions:
  RewardHistoryEntry:
    properties:
      amount:
        type: integer
      date_created:
        type: string
      date_updated:
        type: string
      id:
        type: string
      name:
        description: Do we need it here?
        type: string
      pool_id:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  RewardPool:
    properties:
      active:
        type: boolean
      amount:
        type: integer
      data:
        $ref: '#/definitions/model.JSONData'
      date_created:
        type: string
      date_updated:
        type: string
      id:
        type: string
      name:
        type: string
      reward_code:
        description: illini_cash
        type: string
    type: object
  RewardType:
    properties:
      active:
        type: boolean
      amount:
        description: "5"
        type: integer
      building_block:
        description: '"content"'
        type: string
      date_created:
        type: string
      date_updated:
        type: string
      display_name:
        description: Win five point by five readings
        type: string
      id:
        type: string
      name:
        description: '"win_five_point_by_five_readings"'
        type: string
      reward_code:
        description: illini_cash
        type: string
    type: object
  model.JSONData:
    additionalProperties: true
    type: object
host: localhost
info:
  contact: {}
  description: RoRewards Building Block API Documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rewards Building Block API
  version: 0.0.3
paths:
  /admin/reward_pool:
    post:
      consumes:
      - application/json
      description: Create a new reward pool
      operationId: AdminCreateRewardPool
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RewardPool'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/reward_pool/{id}:
    delete:
      description: Deletes a reward pool with the specified id
      operationId: AdminDeleteRewardPool
      responses:
        "200":
          description: ""
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a reward pool with the specified id
      operationId: AdminUpdateRewardPool
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RewardPool'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/reward_pools:
    get:
      description: Retrieves  all reward types
      operationId: AdminGetRewardPools
      parameters:
      - description: Coma separated IDs of the desired records
        in: query
        name: ids
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/RewardPool'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/reward_pools/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a reward pool by id
      operationId: AdminRewardPool
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RewardPool'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/reward_types:
    get:
      description: Retrieves  all reward types
      operationId: AdminGetRewardTypes
      parameters:
      - description: Coma separated IDs of the desired records
        in: query
        name: ids
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/RewardType'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Create a new reward type
      operationId: AdminCreateRewardType
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RewardType'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/reward_types/{id}:
    delete:
      description: Deletes a reward type with the specified id
      operationId: AdminDeleteRewardType
      responses:
        "200":
          description: ""
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: Retrieves a reward type by id
      operationId: AdminRewardTypes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RewardType'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a reward type with the specified id
      operationId: AdminUpdateRewardType
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RewardType'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /int/reward_history:
    post:
      consumes:
      - application/json
      description: Create a new reward history entry from another BB
      operationId: InternalCreateRewardHistoryEntry
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RewardHistoryEntry'
      security:
      - InternalApiAuth: []
      tags:
      - Internal
  /user/balance:
    get:
      description: Retrieves balance for each user's wallet
      operationId: GetUserBalance
      responses:
        "200":
          description: ""
      security:
      - UserAuth: []
      tags:
      - Client
  /version:
    get:
      description: Gives the service version.
      operationId: Version
      produces:
      - text/plain
      responses:
        "200":
          description: ""
      tags:
      - Client
  /wallet/{code}/balance:
    get:
      description: Retrieves  the user balance
      operationId: GetWalletBalance
      responses:
        "200":
          description: ""
      security:
      - UserAuth: []
      tags:
      - Client
  /wallet/{code}/history:
    get:
      description: Retrieves the user history
      operationId: GetWalletHistory
      responses:
        "200":
          description: ""
      security:
      - UserAuth: []
      tags:
      - Client
schemes:
- https
securityDefinitions:
  AdminGroupAuth:
    in: header
    name: GROUP
    type: apiKey
  AdminUserAuth:
    in: header (add Bearer prefix to the Authorization value)
    name: Authorization
    type: apiKey
  InternalApiAuth:
    in: header (add INTERNAL-API-KEY with correct value as a header)
    name: Authorization
    type: apiKey
swagger: "2.0"
